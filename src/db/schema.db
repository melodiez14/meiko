-- MySQL Script generated by MySQL Workbench
-- Tue May 30 13:54:48 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema meiko
-- -----------------------------------------------------
-- nice lastcake created
-- 

-- -----------------------------------------------------
-- Schema meiko
--
-- nice lastcake created
-- 
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `meiko` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema testing
-- -----------------------------------------------------
USE `meiko` ;

-- -----------------------------------------------------
-- Table `meiko`.`rolegroups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`rolegroups` (
  `id` INT NOT NULL,
  `name` VARCHAR(15) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`users` (
  `id` VARCHAR(12) NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `gender` ENUM('L', 'P') NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `college` VARCHAR(100) NOT NULL,
  `note` VARCHAR(100) NOT NULL,
  `rolegroups_id` INT NULL,
  `status` TINYINT NOT NULL DEFAULT 0,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(14) NULL,
  `line_id` VARCHAR(45) NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_users_role_groups_idx` (`rolegroups_id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC),
  UNIQUE INDEX `line_id_UNIQUE` (`line_id` ASC),
  CONSTRAINT `fk_users_role_groups`
    FOREIGN KEY (`rolegroups_id`)
    REFERENCES `meiko`.`rolegroups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`modules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`modules` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`p_rolegroups_modules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`p_rolegroups_modules` (
  `rolegroups_id` INT NOT NULL,
  `modules_id` INT NOT NULL,
  `ability` ENUM('create', 'read', 'update', 'delete', 'xcreate', 'xread', 'xupdate', 'xdelete') NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`rolegroups_id`, `modules_id`, `ability`),
  INDEX `fk_role_groups_has_modules_modules1_idx` (`modules_id` ASC),
  INDEX `fk_role_groups_has_modules_role_groups1_idx` (`rolegroups_id` ASC),
  CONSTRAINT `fk_role_groups_has_modules_role_groups1`
    FOREIGN KEY (`rolegroups_id`)
    REFERENCES `meiko`.`rolegroups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_groups_has_modules_modules1`
    FOREIGN KEY (`modules_id`)
    REFERENCES `meiko`.`modules` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`places`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`places` (
  `id` VARCHAR(10) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`courses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`courses` (
  `id` VARCHAR(10) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `ucu` TINYINT NOT NULL,
  `semester` TINYINT(1) NOT NULL,
  `status` TINYINT NOT NULL DEFAULT 0,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `end_time` TIME NOT NULL,
  `start_time` TIME NOT NULL,
  `classes` CHAR NOT NULL,
  `day` ENUM('Sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat') NOT NULL,
  `places_id` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`, `places_id`),
  INDEX `fk_courses_places1_idx` (`places_id` ASC),
  CONSTRAINT `fk_courses_places1`
    FOREIGN KEY (`places_id`)
    REFERENCES `meiko`.`places` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`grade_parameters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`grade_parameters` (
  `id` INT NOT NULL,
  `type` VARCHAR(15) NULL,
  `percentage` INT(2) NULL,
  `courses_id` VARCHAR(10) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_gradeparameter_courses1_idx` (`courses_id` ASC),
  CONSTRAINT `fk_gradeparameter_courses1`
    FOREIGN KEY (`courses_id`)
    REFERENCES `meiko`.`courses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`assigments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`assigments` (
  `id` INT NOT NULL,
  `status` TINYINT NOT NULL,
  `upload_date` DATETIME NULL,
  `due_date` DATETIME NOT NULL,
  `grade_parameter_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_assigments_gradeparameter1_idx` (`grade_parameter_id` ASC),
  CONSTRAINT `fk_assigments_gradeparameter1`
    FOREIGN KEY (`grade_parameter_id`)
    REFERENCES `meiko`.`grade_parameters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`p_users_courses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`p_users_courses` (
  `users_id` VARCHAR(12) NOT NULL,
  `courses_id` VARCHAR(10) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`users_id`, `courses_id`),
  INDEX `fk_users_has_lectures_lectures1_idx` (`courses_id` ASC),
  INDEX `fk_users_has_lectures_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_lectures_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `meiko`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_lectures_lectures1`
    FOREIGN KEY (`courses_id`)
    REFERENCES `meiko`.`courses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`attendances`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`attendances` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `meeting_number` TINYINT(2) NULL,
  `p_users_courses_users_id` VARCHAR(12) NOT NULL,
  `p_users_courses_courses_id` VARCHAR(10) NOT NULL,
  `status` TINYINT NULL,
  `meeting_date` DATE NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_attendances_p_users_courses1_idx` (`p_users_courses_users_id` ASC, `p_users_courses_courses_id` ASC),
  CONSTRAINT `fk_attendances_p_users_courses1`
    FOREIGN KEY (`p_users_courses_users_id` , `p_users_courses_courses_id`)
    REFERENCES `meiko`.`p_users_courses` (`users_id` , `courses_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`p_users_assignments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`p_users_assignments` (
  `assigments_id` INT NOT NULL,
  `users_id` VARCHAR(12) NOT NULL,
  `score` FLOAT NULL DEFAULT NULL,
  `status` TINYINT NOT NULL DEFAULT 0,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`assigments_id`, `users_id`),
  INDEX `fk_assigments_has_users_users1_idx` (`users_id` ASC),
  INDEX `fk_assigments_has_users_assigments1_idx` (`assigments_id` ASC),
  CONSTRAINT `fk_assigments_has_users_assigments1`
    FOREIGN KEY (`assigments_id`)
    REFERENCES `meiko`.`assigments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_assigments_has_users_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `meiko`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`files`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`files` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `path` VARCHAR(45) NOT NULL,
  `mime` VARCHAR(255) NULL,
  `extension` VARCHAR(5) NULL,
  `size` INT(4) NULL,
  `upload_by` VARCHAR(45) NULL,
  `users_id` VARCHAR(12) NOT NULL,
  `table_name` VARCHAR(45) NULL,
  `table_id` INT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_files_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_files_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `meiko`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`informations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`informations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NULL,
  `description` TEXT NULL,
  `courses_id` VARCHAR(10) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `type` ENUM('General', 'Material') NULL,
  PRIMARY KEY (`id`, `courses_id`),
  INDEX `fk_informations_courses1_idx` (`courses_id` ASC),
  CONSTRAINT `fk_informations_courses1`
    FOREIGN KEY (`courses_id`)
    REFERENCES `meiko`.`courses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meiko`.`notifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`notifications` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `descriptions` TEXT NOT NULL,
  `read_at` TIMESTAMP NULL,
  `url` VARCHAR(255) NULL,
  `table_id` VARCHAR(45) NULL,
  `table_name` VARCHAR(45) NULL,
  `users_id` VARCHAR(12) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`, `users_id`),
  INDEX `fk_notifications_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_notifications_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `meiko`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `meiko` ;

-- -----------------------------------------------------
-- Placeholder table for view `meiko`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meiko`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `meiko`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `meiko`.`view1`;
USE `meiko`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
